@rendermode InteractiveServer
<div class="w-full h-full transform-3d flex flex-col justify-center items-center p-6" id="container" >

    @for(int i = 0; i < numberOfItems; i++)
    {
        string name = defaultInputName + i;
        if(i == 0)
        {
            <input type="radio" name="slider" id=@name checked>
        }
        else
        {
            <input type="radio" name="slider" id=@name>
        }
    }


    <div id="cards" class="relative w-full h-full">

        @for (int i = 0; i < numberOfItems; i++)
        {
            string inputTarget = defaultInputName + i;
            string lName = defaultFrameID + i;
            <label class="absolute w-1/2 h-full card flex justify-center" for=@inputTarget id=@lName>
                <img class="rounded-xl w-auto h-full shadow-lg" src="@OutfitImageUrls[i]">
            </label>
        }
    

    </div>
</div>

<style>

    input[type=radio] {
        display: none;
    }

    .card {
        position: absolute;
        width: 60%;
        height: 100%;
        left: 0;
        right: 0;
        margin: auto;
        transition: transform .4s ease;
        cursor: pointer;
    }

    #cards {
        position: relative;
        width: 100%;
        height: 100%;
        margin-bottom: 20px;
    }


    #container{
        height: 35rem;
    }   

    @((MarkupString)DynamicStyles)

   
</style>

@code {
    [Parameter]
    public string? Location { get; set; }
    [Parameter]
    public List<string>? OutfitImageUrls { get; set; }

    int numberOfItems;

    private string defaultInputName = "input-";
    private string defaultFrameID = "frame-";

    private string DynamicStyles => GenerateDynamicStyles();
    protected override void OnParametersSet()
    {
        numberOfItems = OutfitImageUrls?.Count ?? 0;
        StateHasChanged(); 
    }
    private string GenerateDynamicStyles()
    {
        numberOfItems = OutfitImageUrls.Count;
        string css = "<style>";

        for (int i = 0; i < numberOfItems; i++)
        {
            int leftIndex = ((i - 1) + numberOfItems) % numberOfItems;
            int rightIndex = (i + 1) % numberOfItems;
            int hideIndex = (i + 2) % numberOfItems;
            int hideIndex5th = (i + 3) % numberOfItems;

            css += $@"
                #{defaultInputName}{i}:checked ~ #cards #{defaultFrameID}{leftIndex} {{
                    transform: translateX(-40%) scale(.8);
                    opacity: .4;
                    z-index: 0;
                }}

                #{defaultInputName}{i}:checked ~ #cards #{defaultFrameID}{rightIndex} {{
                    transform: translateX(40%) scale(.8);
                    opacity: .4;
                    z-index: 0;
                }}

                #{defaultInputName}{i}:checked ~ #cards #{defaultFrameID}{i} {{
                    transform: translateX(0) scale(1);
                    opacity: 1;
                    z-index: 1;
                }}

                #{defaultInputName}{0}:checked ~ #cards #{defaultFrameID}{numberOfItems-1} {{
                    transform: translateX(-40%) scale(.8);
                    opacity: .4;
                    z-index: 0;
                }}

            ";

            if (numberOfItems > 3)
            {
                if(numberOfItems == 5)
                {
                      css += $@"
                        #{defaultInputName}{i}:checked ~ #cards #{defaultFrameID}{hideIndex} {{
                            display: none;
                        }}";
                          css += $@"
                        #{defaultInputName}{i}:checked ~ #cards #{defaultFrameID}{hideIndex5th} {{
                            display: none;
                        }}";
                }else{
                      css += $@"
                        #{defaultInputName}{i}:checked ~ #cards #{defaultFrameID}{hideIndex} {{
                            display: none;
                        }}";
                }
                   
                }
        }

        css += "</style>";
        return css; 
    }
}
