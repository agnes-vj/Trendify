@using Backend.Models

<div class="flex min-h-screen items-center justify-center bg-gray-100 px-6 py-12">
    <div class="w-full max-w-sm bg-white rounded-2xl shadow-lg p-8">
        <h2 class="text-center text-2xl font-bold tracking-tight text-gray-900">Log in to your account</h2>

        <EditForm class="space-y-6 mt-6" Model="UserLogin" OnValidSubmit="HandleSubmit" FormName="LoginForm">
            <DataAnnotationsValidator />
            <div>
                <label for="email" class="block text-sm font-medium text-gray-900">Username</label>
                <InputText id="email" class="block w-full mt-2 rounded-md bg-white px-3 py-2 border border-gray-300 text-gray-900 placeholder-gray-400 focus:border-indigo-500 focus:ring-indigo-500"
                   @bind-Value="UserLogin.UserName"/>
            </div>

            <div>
                <label for="password" class="block text-sm font-medium text-gray-900">Password</label>
                <InputText type="password" name="password" id="password" autocomplete="current-password" @bind-Value="UserLogin.Password" required
                       class="block w-full mt-2 rounded-md bg-white px-3 py-2 border border-gray-300 text-gray-900 placeholder-gray-400 focus:border-indigo-500 focus:ring-indigo-500"/>
            </div>

            <button type="submit"
                    class="w-full rounded-md bg-stone-400 px-4 py-2 text-white font-semibold shadow-md hover:bg-stone-500 focus:outline-none focus:ring-2 focus:ring-indigo-400">
                Log in
            </button>

            <button type="button"
                    class="w-full rounded-md bg-gray-50 px-4 py-2 text-stone-800 font-semibold shadow-md hover:bg-stone-200 focus:outline-none focus:ring-2 focus:ring-stone-800">
                Sign Up
            </button>
        </EditForm>
    </div>
</div>



@code {
    public UserLogin UserLogin { get; set; } = new UserLogin();
    private string statusMessage = string.Empty;

    public async Task HandleSubmit()
    {
        UserLogin.UserId = 1;
        var response = await HttpManager.PostUserLogin(UserLogin);
        if(response.HasError)
        {
            statusMessage = $"{response.StatusCode.ToString()}: {response.ErrorMessage}";
        }
        statusMessage = response.ErrorMessage;
        UserLogin = response.ResponseObject;
        Console.WriteLine("Submitted:" + statusMessage);
    }
}
