@using FrontEnd.Components.Utils

@if (ClothingList == null)
{
    <div class="d-flex align-items-center">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <ClothingItemList clothesList="@ClothingList"></ClothingItemList>
}



@code {
    [Parameter]
    public string FilterQuery { get; set; }

    private List<ClothingItem> ClothingList { get; set; }
    private string statuscode;
    private bool dbError;

    protected async override Task OnInitializedAsync()
    {
        try
        {

            var response = await HttpManager.GetAllClothing();

            if (response.HasError)
            {
                statuscode = response.StatusCode.ToString();
            }
            else
            {
                ClothingList = response.ResponseObject;
            }

        }catch(Exception e)
        {
            dbError = true;
        }

    }

    protected async override Task OnParametersSetAsync()
    {
        if (string.IsNullOrEmpty(FilterQuery))
        {
            return;
        }

        try
        {

            var response = await HttpManager.GetFilteredClothing(FilterQuery);

            if (response.HasError)
            {
                statuscode = response.StatusCode.ToString();
            }
            else
            {
                ClothingList = response.ResponseObject;
            }

        }
        catch (Exception e)
        {
            dbError = true;
        }

        StateHasChanged();
    }
}
