@using FrontEnd.Components.Utils
@inject NavigationManager Navigation

@if (ClothingList == null)
{
    <div class="d-flex align-items-center">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <ClothingItemList clothesList="@ClothingList" DeleteClothingItem="DeleteClothingItem"></ClothingItemList>
}

@code {
    [Parameter]
    public string FilterQuery { get; set; }

    private List<ClothingItem> ClothingList { get; set; }
    private string statuscode;
    private bool dbError;

    protected async override Task OnInitializedAsync()
    {
        await FetchClothingItems();
    }
     
    protected async override Task OnParametersSetAsync()
    {
        await FetchFilteredClothingItems(); 
    }
      
    private async Task FetchClothingItems()
    {
        try
        {
            var response = await HttpManager.GetAllClothing();

            if (response.HasError)
            {
                statuscode = response.StatusCode.ToString();
            }
            else
            {
                ClothingList = response.ResponseObject;
            }
        }
        catch (Exception e)
        {
            dbError = true;
        }
    }
      
    private async Task FetchFilteredClothingItems()
    {
        if (string.IsNullOrEmpty(FilterQuery))
        {
            return;
        }

        try
        {
            var response = await HttpManager.GetFilteredClothing(FilterQuery);

            if (response.HasError)
            {
                statuscode = response.StatusCode.ToString();
            }
            else
            {
                ClothingList = [];
                ClothingList = response.ResponseObject;
            }

        }
        catch (Exception)
        {
            dbError = true;
        } 
    }

    public async Task DeleteClothingItem(int id)
    {
        Console.WriteLine("Delete clicked at item " + (id - 1));
        try
        {

            var response = await HttpManager.DeleteClothingItem(id);
            if (response.HasError)
            {
                statuscode = response.StatusCode.ToString();
                Console.WriteLine(statuscode);

            }
            else
            {
                await FetchClothingItems();
            
            }


        }
        catch (Exception e)
        {
            dbError = true;
        }
    }
}
